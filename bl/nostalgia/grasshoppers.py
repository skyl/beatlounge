"""
1,2,9                           9,2,1

1,3,8                           8,3,1

1,4,7                           7,4,1

1,5,6                           6,5,1

                2,8,2

    2,3,7                  7,3,2

        2,4,6           6,4,2

                5,2,5


                3,6,3

      3,4,5               5,4,3


                4,4,4



[0,1,3,12]                         [0,-1,-3,-12] or [0,9,11,12]

[0,1,4,12]                         [0,-1,-4,-12]    [0,8,11,12]

[0,1,5,12]                         [0,-1,-5,-12]    [0,7,11,12]

[0,1,6,12]                         [0,-1,-6,-12]    [0,6,11,12]


                [0,2,4,12]

    [0,2,5,12]                      [0,-2,-5,-12] or [0,7,10,12]

        [0,2,6,12]              [0,-2,-6,-12] or [0,6,10,12]


                [0,5,7,12]


                [0,3,6,12]

    [0,3,7,12]                  [0,-3,-7,-12] or [0,5,9,12]

                [0,4,8,12]

"""


hoppers = [

[0, 1, 3], [-1, 0, 2], [-3, -2, 0],   [0, 9, 11], [-9, 0, 2], [-11, -2, 0],
[0, 1, 4], [-1, 0, 3], [-4, -3, 0],   [0, 8, 11], [-8, 0, 3], [-11, -3, 0],
[0, 1, 5], [-1, 0, 4], [-5, -4, 0],   [0, 7, 11], [-7, 0, 4], [-11, -4, 0],
[0, 1, 6], [-1, 0, 5], [-6, -4, 0],   [0, 6, 11], [-6, 0, 5], [-11, -5, 0],
                  [-4, -2, 0],  [-2, 0, 2],  [0, 2, 4],
[0, 2, 5], [-2, 0, 3], [-5, -3, 0],   [0, 7, 10], [-7, 0, 3], [-10, -7, 0],
[0, 2, 6], [-2, 0, 4], [-6, -4, 0],   [0, 6, 10], [-6, 0, 4], [-10, -4, 0],
                  [0, 5, 7], [-5, 0, 2], [-7, -2, 0],
                  [0, 3, 6], [-3, 0, 3], [-6, -3, 0],
 [0, 3, 7], [-3, 0, 4], [-7, -4, 0],      [0, 5, 9], [-5, 0, 4], [-9, -4, 0],
                  [0, 4, 8], [-4, 0, 4], [-8, -4, 0]

]


major = [-12, -10, -8, -7, -5, -3, -1, 0, 2, 4, 5, 7, 9, 11, 12]
aeolian = [-12, -10, -9, -7, -5, -4, -2, 0, 2, 3, 5, 7, 8, 10, 12]
pent = [-12, -9, -7, -5, -2, 0, 3, 5, 7, 10, 12]


def _stretch(scale):
    return [n - 12 for n in scale[:-1]] + scale


def hoppers_in(scale):
    if scale[0] > -1:
        scale = _stretch(scale)
    return [candidate for candidate in hoppers if all([a in scale
            for a in candidate])]


major_hoppers = hoppers_in(major)
aeolian_hoppers = hoppers_in(aeolian)
